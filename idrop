#!/bin/bash

which inotifywait &>/dev/null || {
    echo "Yo fool, get inotify-tools first"
    exit 1
}

# If caled with the -i flag, increase the max number of inotify watches allowed by the kernel.
[[ $1 == '-i' ]] && shift && echo $((8192*64)) | sudo tee /proc/sys/fs/inotify/max_user_watches

[[ -z "$1" ]] && path="$(pwd)/"
[[ -n "$1" ]] && path="$@"
echo "Watching: $path"

# NOTE: The -m flag to inotifywait seems to do the same thing
# as a while loop. However, the loop may decrease performance
# by trying to re-establish *all* of our inotify watched every
# time anything happens. Let's see if this works better:
# inotifywait -q -m -r ${path[*]}
# Holy fucking christ yes it does!

# Same as above, but a bit less verboseby only looking for opens
inotifywait -qmr -e open ${path[*]}

# inotifywait -qmr -e modify ${path[*]}

# Notify us whenever a particular file type below a particular
# directory is opened (for any purpose: read, write, exec, etc.)
# find <dir> -name "*.jpg" | inotifywait -qm -e open --fromfile -
