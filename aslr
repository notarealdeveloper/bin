#!/bin/bash

# For testing buffer overflows and such

source ~/.bashrc

usage () { printf "$(basename "$0") [on|off|toggle]"; }

### Values for /proc/sys/kernel/randomize_va_space
# 0 -- No randomization. Everything is static.
# 1 -- Conservative randomization. Shared libraries, stack, mmap(), VDSO and heap are randomized.
# 2 -- Full randomization. In addition to elements listed in the previous point, memory managed through brk() is also randomized.
ASLR_OFF_VALUE=0
ASLR_ON_VALUE=2

aslr_off() {
    log "Turning aslr off"
    echo "$ASLR_OFF_VALUE" | sudo tee /proc/sys/kernel/randomize_va_space >/dev/null
}

aslr_on() {
    log "Turning aslr on"
    echo "$ASLR_ON_VALUE" | sudo tee /proc/sys/kernel/randomize_va_space >/dev/null
}

aslr_toggle() {
    local f="/proc/sys/kernel/randomize_va_space"
    aslr_status="$(cat "$f")"
    case "$aslr_status" in
        "$ASLR_OFF_VALUE")  aslr_on;;
        "$ASLR_ON_VALUE")   aslr_off;;
        *)                  die "${0}: Something messed up. Fix your code.";;
    esac
}

# Go ahead and grab the password right away
sudo true

[[ -z "$1" ]] && aslr_toggle && exit 0

case "$1" in
    +|on)               aslr_on;;
    -|off)              aslr_off;;
    t|toggle)           aslr_toggle;;
    *)                  usage "Unrecognized option: ${1}";;
esac

